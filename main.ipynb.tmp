{
 "cells": [
  {
   "cell_type": "code",
   "id": "initial_id",
   "metadata": {
    "collapsed": true,
    "ExecuteTime": {
     "end_time": "2024-10-02T05:51:27.673398Z",
     "start_time": "2024-10-02T05:51:27.659712Z"
    }
   },
   "source": [
    "# Importing libraries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ],
   "outputs": [],
   "execution_count": 190
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-10-02T05:51:27.696442Z",
     "start_time": "2024-10-02T05:51:27.682570Z"
    }
   },
   "cell_type": "code",
   "source": [
    "# Loading dataset\n",
    "admin_data = pd.read_csv('Admin.csv')\n",
    "lab_data = pd.read_csv('Labs.csv')"
   ],
   "id": "7dc11bc06bc7ed83",
   "outputs": [],
   "execution_count": 191
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-10-02T05:51:27.728202Z",
     "start_time": "2024-10-02T05:51:27.720912Z"
    }
   },
   "cell_type": "code",
   "source": "admin_data",
   "id": "f915c17511541dc0",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "       ID    Med  Admin Date     Units\n",
       "0       1  Med A  02/07/2012  1,500.00\n",
       "1       1  Med A  06/07/2012  1,500.00\n",
       "2       1  Med A  09/07/2012  1,500.00\n",
       "3       1  Med A  11/07/2012  1,500.00\n",
       "4       1  Med A  13/07/2012  1,500.00\n",
       "...   ...    ...         ...       ...\n",
       "2017  129  Med A  27/08/2012  5,200.00\n",
       "2018  129  Med A  30/08/2012  5,200.00\n",
       "2019  129  Med A  04/09/2012  5,200.00\n",
       "2020  129  Med A  06/09/2012  6,500.00\n",
       "2021  129  Med B  13/09/2012     10.00\n",
       "\n",
       "[2022 rows x 4 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Med</th>\n",
       "      <th>Admin Date</th>\n",
       "      <th>Units</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Med A</td>\n",
       "      <td>02/07/2012</td>\n",
       "      <td>1,500.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Med A</td>\n",
       "      <td>06/07/2012</td>\n",
       "      <td>1,500.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>Med A</td>\n",
       "      <td>09/07/2012</td>\n",
       "      <td>1,500.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>Med A</td>\n",
       "      <td>11/07/2012</td>\n",
       "      <td>1,500.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>Med A</td>\n",
       "      <td>13/07/2012</td>\n",
       "      <td>1,500.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017</th>\n",
       "      <td>129</td>\n",
       "      <td>Med A</td>\n",
       "      <td>27/08/2012</td>\n",
       "      <td>5,200.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018</th>\n",
       "      <td>129</td>\n",
       "      <td>Med A</td>\n",
       "      <td>30/08/2012</td>\n",
       "      <td>5,200.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019</th>\n",
       "      <td>129</td>\n",
       "      <td>Med A</td>\n",
       "      <td>04/09/2012</td>\n",
       "      <td>5,200.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020</th>\n",
       "      <td>129</td>\n",
       "      <td>Med A</td>\n",
       "      <td>06/09/2012</td>\n",
       "      <td>6,500.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021</th>\n",
       "      <td>129</td>\n",
       "      <td>Med B</td>\n",
       "      <td>13/09/2012</td>\n",
       "      <td>10.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2022 rows × 4 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 192,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 192
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-10-02T05:51:27.776008Z",
     "start_time": "2024-10-02T05:51:27.749641Z"
    }
   },
   "cell_type": "code",
   "source": "lab_data",
   "id": "625c9e46a479f266",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "         ID DRAW_DATE LAB_RESULT_CODE LAB_VALUE\n",
       "0       1.0    04-Jul           LAB A       679\n",
       "1       1.0    01-Aug           LAB A       621\n",
       "2       1.0    05-Sep           LAB A       915\n",
       "3       1.0    03-Oct           LAB A       848\n",
       "4       1.0    07-Nov           LAB A       845\n",
       "...     ...       ...             ...       ...\n",
       "2392  129.0    16-Aug           LAB B      10.0\n",
       "2393  129.0    04-Sep           LAB B       9.4\n",
       "2394  129.0    05-Jul           LAB C        36\n",
       "2395  129.0    02-Aug           LAB C        39\n",
       "2396  129.0    04-Sep           LAB C        27\n",
       "\n",
       "[2397 rows x 4 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>DRAW_DATE</th>\n",
       "      <th>LAB_RESULT_CODE</th>\n",
       "      <th>LAB_VALUE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>04-Jul</td>\n",
       "      <td>LAB A</td>\n",
       "      <td>679</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "      <td>01-Aug</td>\n",
       "      <td>LAB A</td>\n",
       "      <td>621</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.0</td>\n",
       "      <td>05-Sep</td>\n",
       "      <td>LAB A</td>\n",
       "      <td>915</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.0</td>\n",
       "      <td>03-Oct</td>\n",
       "      <td>LAB A</td>\n",
       "      <td>848</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.0</td>\n",
       "      <td>07-Nov</td>\n",
       "      <td>LAB A</td>\n",
       "      <td>845</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2392</th>\n",
       "      <td>129.0</td>\n",
       "      <td>16-Aug</td>\n",
       "      <td>LAB B</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2393</th>\n",
       "      <td>129.0</td>\n",
       "      <td>04-Sep</td>\n",
       "      <td>LAB B</td>\n",
       "      <td>9.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2394</th>\n",
       "      <td>129.0</td>\n",
       "      <td>05-Jul</td>\n",
       "      <td>LAB C</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2395</th>\n",
       "      <td>129.0</td>\n",
       "      <td>02-Aug</td>\n",
       "      <td>LAB C</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2396</th>\n",
       "      <td>129.0</td>\n",
       "      <td>04-Sep</td>\n",
       "      <td>LAB C</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2397 rows × 4 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 193,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 193
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-10-02T05:51:27.871442Z",
     "start_time": "2024-10-02T05:51:27.849906Z"
    }
   },
   "cell_type": "code",
   "source": "admin_data.describe()",
   "id": "a29fafd3ff920b3c",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "                ID\n",
       "count  2022.000000\n",
       "mean     66.767557\n",
       "std      37.973341\n",
       "min       1.000000\n",
       "25%      32.250000\n",
       "50%      67.000000\n",
       "75%     100.000000\n",
       "max     129.000000"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>2022.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>66.767557</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>37.973341</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>32.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>67.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>100.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>129.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ]
     },
     "execution_count": 194,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 194
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-10-02T05:51:27.917466Z",
     "start_time": "2024-10-02T05:51:27.902774Z"
    }
   },
   "cell_type": "code",
   "source": "lab_data.describe()",
   "id": "df00b1069c1d4441",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "                ID\n",
       "count  2095.000000\n",
       "mean     65.557041\n",
       "std      38.453118\n",
       "min       1.000000\n",
       "25%      31.000000\n",
       "50%      66.000000\n",
       "75%      99.000000\n",
       "max     129.000000"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>2095.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>65.557041</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>38.453118</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>31.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>66.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>99.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>129.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ]
     },
     "execution_count": 195,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 195
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-10-02T05:51:27.997808Z",
     "start_time": "2024-10-02T05:51:27.989352Z"
    }
   },
   "cell_type": "code",
   "source": "admin_data.isnull().sum()",
   "id": "3126f3f0c8938dcb",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ID            0\n",
       "Med           0\n",
       "Admin Date    0\n",
       "Units         0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 196,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 196
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-10-02T05:51:28.122111Z",
     "start_time": "2024-10-02T05:51:28.113079Z"
    }
   },
   "cell_type": "code",
   "source": "lab_data.isnull().sum()",
   "id": "33d1339a8775b5b",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ID                 302\n",
       "DRAW_DATE            0\n",
       "LAB_RESULT_CODE      0\n",
       "LAB_VALUE            0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 197,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 197
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-10-02T05:53:31.845007Z",
     "start_time": "2024-10-02T05:53:31.826810Z"
    }
   },
   "cell_type": "code",
   "source": "admin_data.info()",
   "id": "35802921f035fbb2",
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2022 entries, 0 to 2021\n",
      "Data columns (total 4 columns):\n",
      " #   Column      Non-Null Count  Dtype \n",
      "---  ------      --------------  ----- \n",
      " 0   ID          2022 non-null   int64 \n",
      " 1   Med         2022 non-null   object\n",
      " 2   Admin Date  2022 non-null   object\n",
      " 3   Units       2022 non-null   object\n",
      "dtypes: int64(1), object(3)\n",
      "memory usage: 63.3+ KB\n"
     ]
    }
   ],
   "execution_count": 205
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-10-02T05:55:20.644905Z",
     "start_time": "2024-10-02T05:55:20.627375Z"
    }
   },
   "cell_type": "code",
   "source": "lab_data.info()",
   "id": "cde106f900d0b14d",
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2397 entries, 0 to 2396\n",
      "Data columns (total 4 columns):\n",
      " #   Column           Non-Null Count  Dtype  \n",
      "---  ------           --------------  -----  \n",
      " 0   ID               2095 non-null   float64\n",
      " 1   DRAW_DATE        2397 non-null   object \n",
      " 2   LAB_RESULT_CODE  2397 non-null   object \n",
      " 3   LAB_VALUE        2397 non-null   object \n",
      "dtypes: float64(1), object(3)\n",
      "memory usage: 75.0+ KB\n"
     ]
    }
   ],
   "execution_count": 206
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-10-02T05:56:21.127502Z",
     "start_time": "2024-10-02T05:56:21.108017Z"
    }
   },
   "cell_type": "code",
   "source": [
    "# Converting Units and Lab_Value to numerical\n",
    "admin_data['Units'] = pd.to_numeric(admin_data['Units'], errors='coerce')"
   ],
   "id": "a4871d11d05c9dbb",
   "outputs": [],
   "execution_count": 210
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-10-02T05:56:33.638733Z",
     "start_time": "2024-10-02T05:56:33.624754Z"
    }
   },
   "cell_type": "code",
   "source": "admin_data.isnull().sum()",
   "id": "ddeb936580b64d61",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ID               0\n",
       "Med              0\n",
       "Admin Date       0\n",
       "Units         1647\n",
       "dtype: int64"
      ]
     },
     "execution_count": 212,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 212
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-10-02T05:57:03.364911Z",
     "start_time": "2024-10-02T05:57:03.357622Z"
    }
   },
   "cell_type": "code",
   "source": "lab_data['LAB_VALUE'] = pd.to_numeric(lab_data['LAB_VALUE'], errors='coerce')",
   "id": "7bc70dd56a190b",
   "outputs": [],
   "execution_count": 214
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-10-02T05:57:10.769103Z",
     "start_time": "2024-10-02T05:57:10.755517Z"
    }
   },
   "cell_type": "code",
   "source": "lab_data",
   "id": "71aaa4eca65c428b",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "         ID DRAW_DATE LAB_RESULT_CODE  LAB_VALUE\n",
       "0       1.0    04-Jul           LAB A      679.0\n",
       "1       1.0    01-Aug           LAB A      621.0\n",
       "2       1.0    05-Sep           LAB A      915.0\n",
       "3       1.0    03-Oct           LAB A      848.0\n",
       "4       1.0    07-Nov           LAB A      845.0\n",
       "...     ...       ...             ...        ...\n",
       "2392  129.0    16-Aug           LAB B       10.0\n",
       "2393  129.0    04-Sep           LAB B        9.4\n",
       "2394  129.0    05-Jul           LAB C       36.0\n",
       "2395  129.0    02-Aug           LAB C       39.0\n",
       "2396  129.0    04-Sep           LAB C       27.0\n",
       "\n",
       "[2397 rows x 4 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>DRAW_DATE</th>\n",
       "      <th>LAB_RESULT_CODE</th>\n",
       "      <th>LAB_VALUE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>04-Jul</td>\n",
       "      <td>LAB A</td>\n",
       "      <td>679.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "      <td>01-Aug</td>\n",
       "      <td>LAB A</td>\n",
       "      <td>621.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.0</td>\n",
       "      <td>05-Sep</td>\n",
       "      <td>LAB A</td>\n",
       "      <td>915.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.0</td>\n",
       "      <td>03-Oct</td>\n",
       "      <td>LAB A</td>\n",
       "      <td>848.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.0</td>\n",
       "      <td>07-Nov</td>\n",
       "      <td>LAB A</td>\n",
       "      <td>845.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2392</th>\n",
       "      <td>129.0</td>\n",
       "      <td>16-Aug</td>\n",
       "      <td>LAB B</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2393</th>\n",
       "      <td>129.0</td>\n",
       "      <td>04-Sep</td>\n",
       "      <td>LAB B</td>\n",
       "      <td>9.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2394</th>\n",
       "      <td>129.0</td>\n",
       "      <td>05-Jul</td>\n",
       "      <td>LAB C</td>\n",
       "      <td>36.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2395</th>\n",
       "      <td>129.0</td>\n",
       "      <td>02-Aug</td>\n",
       "      <td>LAB C</td>\n",
       "      <td>39.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2396</th>\n",
       "      <td>129.0</td>\n",
       "      <td>04-Sep</td>\n",
       "      <td>LAB C</td>\n",
       "      <td>27.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2397 rows × 4 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 215,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 215
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-10-02T05:57:16.628006Z",
     "start_time": "2024-10-02T05:57:16.619880Z"
    }
   },
   "cell_type": "code",
   "source": "lab_data.isnull().sum()",
   "id": "36dd811de6d5a995",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ID                 302\n",
       "DRAW_DATE            0\n",
       "LAB_RESULT_CODE      0\n",
       "LAB_VALUE            3\n",
       "dtype: int64"
      ]
     },
     "execution_count": 216,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 216
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-10-02T05:57:31.491216Z",
     "start_time": "2024-10-02T05:57:31.390273Z"
    }
   },
   "cell_type": "code",
   "source": [
    "numeric_admin_df = admin_data.select_dtypes(include=[np.number])\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.heatmap(numeric_admin_df.corr(), annot=True, cmap='coolwarm')\n",
    "plt.title('Correlation Heatmap - Admin Data')\n",
    "plt.show()"
   ],
   "id": "520248793d454996",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 1000x600 with 2 Axes>"
      ],
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "execution_count": 217
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-10-02T05:57:39.204487Z",
     "start_time": "2024-10-02T05:57:39.102272Z"
    }
   },
   "cell_type": "code",
   "source": [
    "numeric_lab_df = lab_data.select_dtypes(include=[np.number])\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.heatmap(numeric_lab_df.corr(), annot=True, cmap='coolwarm')\n",
    "plt.title('Correlation Heatmap - Lab Data')\n",
    "plt.show()"
   ],
   "id": "fa814da674e8b438",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 1000x600 with 2 Axes>"
      ],
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "execution_count": 218
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-10-02T05:58:05.033349Z",
     "start_time": "2024-10-02T05:58:05.017736Z"
    }
   },
   "cell_type": "code",
   "source": "merged_df = pd.merge(admin_data, lab_data, on='ID')",
   "id": "e75566f1677e1ead",
   "outputs": [],
   "execution_count": 219
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-10-02T05:58:07.173120Z",
     "start_time": "2024-10-02T05:58:07.150115Z"
    }
   },
   "cell_type": "code",
   "source": "merged_df",
   "id": "8d4890d47e987da7",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "        ID    Med  Admin Date  Units DRAW_DATE LAB_RESULT_CODE  LAB_VALUE\n",
       "0        1  Med A  02/07/2012    NaN    04-Jul           LAB A      679.0\n",
       "1        1  Med A  02/07/2012    NaN    01-Aug           LAB A      621.0\n",
       "2        1  Med A  02/07/2012    NaN    05-Sep           LAB A      915.0\n",
       "3        1  Med A  02/07/2012    NaN    03-Oct           LAB A      848.0\n",
       "4        1  Med A  02/07/2012    NaN    07-Nov           LAB A      845.0\n",
       "...    ...    ...         ...    ...       ...             ...        ...\n",
       "40814  129  Med B  13/09/2012   10.0    16-Aug           LAB B       10.0\n",
       "40815  129  Med B  13/09/2012   10.0    04-Sep           LAB B        9.4\n",
       "40816  129  Med B  13/09/2012   10.0    05-Jul           LAB C       36.0\n",
       "40817  129  Med B  13/09/2012   10.0    02-Aug           LAB C       39.0\n",
       "40818  129  Med B  13/09/2012   10.0    04-Sep           LAB C       27.0\n",
       "\n",
       "[40819 rows x 7 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Med</th>\n",
       "      <th>Admin Date</th>\n",
       "      <th>Units</th>\n",
       "      <th>DRAW_DATE</th>\n",
       "      <th>LAB_RESULT_CODE</th>\n",
       "      <th>LAB_VALUE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Med A</td>\n",
       "      <td>02/07/2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>04-Jul</td>\n",
       "      <td>LAB A</td>\n",
       "      <td>679.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Med A</td>\n",
       "      <td>02/07/2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>01-Aug</td>\n",
       "      <td>LAB A</td>\n",
       "      <td>621.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>Med A</td>\n",
       "      <td>02/07/2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>05-Sep</td>\n",
       "      <td>LAB A</td>\n",
       "      <td>915.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>Med A</td>\n",
       "      <td>02/07/2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>03-Oct</td>\n",
       "      <td>LAB A</td>\n",
       "      <td>848.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>Med A</td>\n",
       "      <td>02/07/2012</td>\n",
       "      <td>NaN</td>\n",
       "      <td>07-Nov</td>\n",
       "      <td>LAB A</td>\n",
       "      <td>845.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40814</th>\n",
       "      <td>129</td>\n",
       "      <td>Med B</td>\n",
       "      <td>13/09/2012</td>\n",
       "      <td>10.0</td>\n",
       "      <td>16-Aug</td>\n",
       "      <td>LAB B</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40815</th>\n",
       "      <td>129</td>\n",
       "      <td>Med B</td>\n",
       "      <td>13/09/2012</td>\n",
       "      <td>10.0</td>\n",
       "      <td>04-Sep</td>\n",
       "      <td>LAB B</td>\n",
       "      <td>9.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40816</th>\n",
       "      <td>129</td>\n",
       "      <td>Med B</td>\n",
       "      <td>13/09/2012</td>\n",
       "      <td>10.0</td>\n",
       "      <td>05-Jul</td>\n",
       "      <td>LAB C</td>\n",
       "      <td>36.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40817</th>\n",
       "      <td>129</td>\n",
       "      <td>Med B</td>\n",
       "      <td>13/09/2012</td>\n",
       "      <td>10.0</td>\n",
       "      <td>02-Aug</td>\n",
       "      <td>LAB C</td>\n",
       "      <td>39.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40818</th>\n",
       "      <td>129</td>\n",
       "      <td>Med B</td>\n",
       "      <td>13/09/2012</td>\n",
       "      <td>10.0</td>\n",
       "      <td>04-Sep</td>\n",
       "      <td>LAB C</td>\n",
       "      <td>27.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>40819 rows × 7 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 220,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 220
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-10-02T05:58:12.228562Z",
     "start_time": "2024-10-02T05:58:12.205135Z"
    }
   },
   "cell_type": "code",
   "source": "merged_df.isnull().sum()",
   "id": "c681ef481f68f60",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ID                     0\n",
       "Med                    0\n",
       "Admin Date             0\n",
       "Units              33181\n",
       "DRAW_DATE              0\n",
       "LAB_RESULT_CODE        0\n",
       "LAB_VALUE             14\n",
       "dtype: int64"
      ]
     },
     "execution_count": 221,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 221
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-10-02T05:58:35.432637Z",
     "start_time": "2024-10-02T05:58:35.416161Z"
    }
   },
   "cell_type": "code",
   "source": "merged_df.dropna(inplace=True)",
   "id": "d5b20ab3b66df0e6",
   "outputs": [],
   "execution_count": 222
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-10-02T05:58:41.183263Z",
     "start_time": "2024-10-02T05:58:41.167362Z"
    }
   },
   "cell_type": "code",
   "source": "merged_df.isnull().sum()",
   "id": "e0cdfae91948601c",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ID                 0\n",
       "Med                0\n",
       "Admin Date         0\n",
       "Units              0\n",
       "DRAW_DATE          0\n",
       "LAB_RESULT_CODE    0\n",
       "LAB_VALUE          0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 223,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 223
  },
  {
   "metadata": {
    "ExecuteTime": {
     "end_time": "2024-10-02T05:58:45.953652Z",
     "start_time": "2024-10-02T05:58:45.931439Z"
    }
   },
   "cell_type": "code",
   "source": "merged_df",
   "id": "58124654657299c7",
   "outputs": [
    {
     "data": {
      "text/plain": [
       "        ID    Med  Admin Date  Units DRAW_DATE LAB_RESULT_CODE  LAB_VALUE\n",
       "598      1  Med B  12/09/2012    4.0    04-Jul           LAB A      679.0\n",
       "599      1  Med B  12/09/2012    4.0    01-Aug           LAB A      621.0\n",
       "600      1  Med B  12/09/2012    4.0    05-Sep           LAB A      915.0\n",
       "601      1  Med B  12/09/2012    4.0    03-Oct           LAB A      848.0\n",
       "602      1  Med B  12/09/2012    4.0    07-Nov           LAB A      845.0\n",
       "...    ...    ...         ...    ...       ...             ...        ...\n",
       "40814  129  Med B  13/09/2012   10.0    16-Aug           LAB B       10.0\n",
       "40815  129  Med B  13/09/2012   10.0    04-Sep           LAB B        9.4\n",
       "40816  129  Med B  13/09/2012   10.0    05-Jul           LAB C       36.0\n",
       "40817  129  Med B  13/09/2012   10.0    02-Aug           LAB C       39.0\n",
       "40818  129  Med B  13/09/2012   10.0    04-Sep           LAB C       27.0\n",
       "\n",
       "[7624 rows x 7 columns]"
      ],
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Med</th>\n",
       "      <th>Admin Date</th>\n",
       "      <th>Units</th>\n",
       "      <th>DRAW_DATE</th>\n",
       "      <th>LAB_RESULT_CODE</th>\n",
       "      <th>LAB_VALUE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>598</th>\n",
       "      <td>1</td>\n",
       "      <td>Med B</td>\n",
       "      <td>12/09/2012</td>\n",
       "      <td>4.0</td>\n",
       "      <td>04-Jul</td>\n",
       "      <td>LAB A</td>\n",
       "      <td>679.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>599</th>\n",
       "      <td>1</td>\n",
       "      <td>Med B</td>\n",
       "      <td>12/09/2012</td>\n",
       "      <td>4.0</td>\n",
       "      <td>01-Aug</td>\n",
       "      <td>LAB A</td>\n",
       "      <td>621.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>600</th>\n",
       "      <td>1</td>\n",
       "      <td>Med B</td>\n",
       "      <td>12/09/2012</td>\n",
       "      <td>4.0</td>\n",
       "      <td>05-Sep</td>\n",
       "      <td>LAB A</td>\n",
       "      <td>915.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>601</th>\n",
       "      <td>1</td>\n",
       "      <td>Med B</td>\n",
       "      <td>12/09/2012</td>\n",
       "      <td>4.0</td>\n",
       "      <td>03-Oct</td>\n",
       "      <td>LAB A</td>\n",
       "      <td>848.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>602</th>\n",
       "      <td>1</td>\n",
       "      <td>Med B</td>\n",
       "      <td>12/09/2012</td>\n",
       "      <td>4.0</td>\n",
       "      <td>07-Nov</td>\n",
       "      <td>LAB A</td>\n",
       "      <td>845.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40814</th>\n",
       "      <td>129</td>\n",
       "      <td>Med B</td>\n",
       "      <td>13/09/2012</td>\n",
       "      <td>10.0</td>\n",
       "      <td>16-Aug</td>\n",
       "      <td>LAB B</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40815</th>\n",
       "      <td>129</td>\n",
       "      <td>Med B</td>\n",
       "      <td>13/09/2012</td>\n",
       "      <td>10.0</td>\n",
       "      <td>04-Sep</td>\n",
       "      <td>LAB B</td>\n",
       "      <td>9.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40816</th>\n",
       "      <td>129</td>\n",
       "      <td>Med B</td>\n",
       "      <td>13/09/2012</td>\n",
       "      <td>10.0</td>\n",
       "      <td>05-Jul</td>\n",
       "      <td>LAB C</td>\n",
       "      <td>36.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40817</th>\n",
       "      <td>129</td>\n",
       "      <td>Med B</td>\n",
       "      <td>13/09/2012</td>\n",
       "      <td>10.0</td>\n",
       "      <td>02-Aug</td>\n",
       "      <td>LAB C</td>\n",
       "      <td>39.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40818</th>\n",
       "      <td>129</td>\n",
       "      <td>Med B</td>\n",
       "      <td>13/09/2012</td>\n",
       "      <td>10.0</td>\n",
       "      <td>04-Sep</td>\n",
       "      <td>LAB C</td>\n",
       "      <td>27.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>7624 rows × 7 columns</p>\n",
       "</div>"
      ]
     },
     "execution_count": 224,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "execution_count": 224
  },
  {
   "metadata": {},
   "cell_type": "code",
   "outputs": [],
   "execution_count": null,
   "source": "",
   "id": "66e026c2f45ea4a"
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
